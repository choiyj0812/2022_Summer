#define beeper 27 //PA4
//----------------------------------
#define X_DIR 21  //PC5
#define X_STEP 15 //PD7
#define XY_EN 14  //PD6
//----------------------------------
#define Y_DIR 23  //PC7
#define Y_STEP 22 //PC6
//----------------------------------
#define X_STOP 18 //PC2
#define Y_STOP 19 //PC3
//----------------------------------
#define ENC_BTN 16 //PC0
#define ENC_A 10  //PD2
#define ENC_B 11  //PD3
//==================================
void Setup_X(){
  pinMode(X_DIR, OUTPUT);
  pinMode(X_STEP, OUTPUT);
  pinMode(XY_EN, OUTPUT);
  digitalWrite(X_DIR, LOW);
  digitalWrite(X_STEP, LOW);
  digitalWrite(XY_EN, HIGH);
}

void Setup_Y(){
  pinMode(Y_DIR, OUTPUT);
  pinMode(Y_STEP, OUTPUT);
  pinMode(XY_EN, OUTPUT);
  digitalWrite(Y_DIR, LOW);
  digitalWrite(Y_STEP, LOW);
  digitalWrite(XY_EN, HIGH);
}

#define PI 3.14
unsigned long curr_millis = 0;
unsigned long prev_millis = 0;
unsigned long prev_millis_1 = 0;
unsigned long prev_millis_enc = 0;

unsigned long curr_micros = 0;
unsigned long prev_micros = 0;
unsigned long prev_micros_y = 0;
//----------------------------------
int count_buz = 0;
int duty = 1;
//----------------------------------
uint8_t toggle_motor_x = 0;
int motor_count_x = 0;
uint8_t motor_x_stop = 0;
uint8_t toggle_dir_X = 0;

uint8_t toggle_motor_y = 0;
int motor_count_y = 0;
uint8_t motor_y_stop = 0;
uint8_t toggle_dir_Y = 0;

uint8_t states = 0;
//----------------------------------
uint8_t flag_btn = 0;
enum{
  STATE_0 = 0,
  STATE_1,
  STATE_2,
  STATE_3
};
enum{
  MOTOR_X = 0,
  MOTOR_Y
};
enum{
  MOTOR_MOVE = 0,
  MOTOR_SPEED_SET
};
uint8_t state_enc = 0;
uint8_t select_motor = MOTOR_X;
uint8_t select_mode = MOTOR_MOVE;
unsigned int step_count_x = 400;
unsigned int step_count_y = 400;

int ocr1a_value = 400;  //200 ~ 1000 : 100us ~ 500us
int ocr3a_value = 400;

char *menu[5] = {
  "1. motor move",
  "2. motor step count",
  "3. motor speed",
  "4. go to home",
  "5. hoho"
};

enum{
  MENU = 0,
  SUB_MENU
};
enum{
  SUB_MOTOR_MOVE = 0,
  SUB_MOTOR_STEP_COUNT,
  SUB_MOTOR_SPEED,
  SUB_HOME,
  SUB_HOHO
};

void setup() {
  Serial.begin(9600);
  //----------------------------------
  pinMode(beeper, OUTPUT);
  digitalWrite(beeper, LOW);
  //----------------------------------
  pinMode(X_STOP, INPUT);
  pinMode(Y_STOP, INPUT);
  //----------------------------------
  pinMode(ENC_BTN, INPUT);
  pinMode(ENC_A, INPUT);
  pinMode(ENC_B, INPUT);
  digitalWrite(ENC_BTN, HIGH);
  digitalWrite(ENC_A, HIGH);
  digitalWrite(ENC_B, HIGH);
  //=======================================================
  //ENCODER BUTTON
  /*while(1){
    //----------------------------------
    func_btn_enc();
    //----------------------------------
    delay(10);
  }*/
  
  //=======================================================
  //Timer2
  /*TCCR2A = 0x00;  // Normal Mode
  TCCR2B = 0x03;  // 0x02 : 8분주, 0x03 : 32분주
  TCNT2 = 156;
  TIMSK2 = 0x01;  // 0x01 : Overflow Interrupt*/

  //=======================================================
  //Timer1
  /*TCCR1A = 0x00;
  TCCR1B = 0x02;  //0x02 : 8분주 = 0.5us
  TCCR1C = 0x00;
  TCNT1 = 65536 - 400;
  //400 : 400 * 0.5us => 200us마다 인터럽트 발생
  //65536 = 2^16
  TIMSK1 = 0x01;*/

  TCCR1A = 0x00;
  TCCR1B = 0x0A;  //0x02 : 8분주 = 0.5us
  TCCR1C = 0x00;
  TCNT1 = 0;
  OCR1A = ocr1a_value;
  TIMSK1 = 0x02;
  //0x01 : overflow interrupt, 0x02 : compare match interrupt A

  //Timer3
  TCCR3A = 0x00;
  TCCR3B = 0x0A;  //0x02 : 8분주 = 0.5us
  TCCR3C = 0x00;
  TCNT3 = 0;
  OCR3A = ocr3a_value;
  TIMSK3 = 0x02;
  //0x01 : overflow interrupt, 0x02 : compare match interrupt A
  
  //=======================================================
  Setup_X();
  Setup_Y();
  digitalWrite(X_DIR, LOW);
  digitalWrite(Y_DIR, LOW);
  digitalWrite(XY_EN, LOW);

  digitalWrite(X_DIR, HIGH);
  digitalWrite(Y_DIR, HIGH);
  
  while(1){
    /*if(digitalRead(X_STOP) == 1){
      motor_x_stop = 1;
    }
    if(digitalRead(Y_STOP) == 1){
      motor_y_stop = 1;
    }*/
    curr_millis = millis();
    //curr_micros = micros();

    if(curr_millis - prev_millis_enc > 10){
      prev_millis_enc = curr_millis;

      func_btn_enc();
    }
    
    /*if(curr_millis - prev_millis > 1000){
      prev_millis = curr_millis;
      Serial.println("1sec");
    }*/

    /*if(curr_millis - prev_millis_1 > 10){
      prev_millis_1 = curr_millis;
      duty++;
      if(duty == 99) duty = 1;
    }
    if(curr_micros - prev_micros > 100){
      count_buz++;
      if(count_buz == 100){
        count_buz = 0;
        digitalWrite(beeper, HIGH);
      }
      else if(count_buz == duty) digitalWrite(beeper, LOW);
    }*/

    //-------------------------------------

    /*if(curr_millis - prev_millis_1 > 3000){
      prev_millis_1 = curr_millis;

//      if(states == 0){
//        digitalWrite(X_DIR, LOW);
//        motor_x_stop = 0;
//        motor_y_stop = 1;
//      }
//      else if(states == 1){
//        digitalWrite(Y_DIR, LOW);
//        motor_x_stop = 1;
//        motor_y_stop = 0;
//      }
//      else if(states == 2){
//        digitalWrite(X_DIR, HIGH);
//        motor_x_stop = 0;
//        motor_y_stop = 1;
//      }
//      else{
//        digitalWrite(Y_DIR, HIGH);
//        motor_x_stop = 1;
//        motor_y_stop = 0;
//      }
//
//      states++;
//      if(states == 4) states = 0;

      //-------------------------------------
      
      if(toggle_dir_X == 0){
        toggle_dir_X = 1;
        digitalWrite(X_DIR, LOW);
        motor_x_stop = 0;
      }
      else{
        toggle_dir_X = 0;
        digitalWrite(X_DIR, HIGH);
        motor_x_stop = 0;
      }

      if(toggle_dir_Y == 0){
        toggle_dir_Y = 1;
        digitalWrite(Y_DIR, LOW);
        motor_y_stop = 0;
      }
      else{
        toggle_dir_Y = 0;
        digitalWrite(Y_DIR, HIGH);
        motor_y_stop = 0;
      }
    }*/

    if(motor_x_stop == 0){
      if(curr_micros - prev_micros > 200){
        prev_micros = curr_micros;
        if(toggle_motor_x == 0){
          toggle_motor_x = 1;
          digitalWrite(X_STEP, HIGH);
  
          motor_count_x++;
          if(motor_count_x == 400){
            motor_count_x = 0;
            motor_x_stop = 1;
          }
        }
        else{
          toggle_motor_x = 0;
          digitalWrite(X_STEP, LOW);
        }
      }
    }

    if(motor_y_stop == 0){
      if(curr_micros - prev_micros_y > 200){
        prev_micros_y = curr_micros;
        if(toggle_motor_y == 0){
          toggle_motor_y = 1;
          digitalWrite(Y_STEP, HIGH);
  
          motor_count_y++;
          if(motor_count_y == 400){
            motor_count_y = 0;
            motor_y_stop = 1;
          }
        }
        else{
          toggle_motor_y = 0;
          digitalWrite(Y_STEP, LOW);
        }
      }
    }
  }


  
  //=======================================================
  /*double radian = 0;
  double degree_1 = 60.0;
  double degree_to_radian = ((degree_1 / 360.0) * (2 * PI));
  double distance_b = 5 * cos(degree_to_radian);
  double distance_c = 5 * sin(degree_to_radian);
  Serial.println(distance_b);
  Serial.println(distance_c);
  
  while(1);*/
  //=======================================================
  /*Setup_X();
  Setup_Y();
  Active_X(true);
  Active_XY(false, true, 1, 2);
  Active_XY(false, false, 1, 2);*/
}

void loop() {
  
}

uint8_t toggle_btn = 0;
int menu_index = 0;
int btn_select = 0;
int which_menu = 0;

void func_btn_enc(){
  //int enc_btn = digitalRead(ENC_BTN);
  uint8_t pin_c = PINC;
  int enc_btn = (pin_c & 0x01) ? 1 : 0;
  // pullup -> 0:push
  if(enc_btn == 0 && flag_btn == 0){
    flag_btn = 1;
    //Serial.println("push");

    /*if(toggle_btn == 0){
      toggle_btn = 1;
      select_motor = MOTOR_X;
      Serial.println("MOTOR_X");
    }
    else if(toggle_btn == 1){
      toggle_btn = 0;
      select_motor = MOTOR_Y;
      Serial.println("MOTOR_Y");
    }*/
    //-----------------------------
    /*if(toggle_btn == 0){
      toggle_btn = 1;
      select_mode = MOTOR_MOVE;
      Serial.println("now mode : MOTOR_MOVE");
    }
    else if(toggle_btn == 1){
      toggle_btn = 0;
      select_mode = MOTOR_SPEED_SET;
      Serial.println("MOTOR_SPEED_SET");
    }*/
    //-------------------------------------------
    if(which_menu == MENU){
      btn_select = menu_index;
      which_menu = SUB_MENU;
      Serial.println("Select this SUB_MENU!");

      if(btn_select == SUB_HOME){
        step_count_x = 30000;
        digitalWrite(X_DIR, HIGH);
        motor_x_stop = 0;

        step_count_y = 30000;
        digitalWrite(Y_DIR, HIGH);
        motor_y_stop = 0;

        while(1){
          int x_stop = digitalRead(X_STOP);
          int y_stop = digitalRead(Y_STOP);
          Serial.println(x_stop);
          Serial.println(y_stop);
          if(x_stop == 1){
            motor_x_stop = 1;
          }
          if(y_stop == 1){
            motor_y_stop = 1;
          }
          if(motor_x_stop == 1 && motor_y_stop == 1){
            step_count_x = 400;
            step_count_y = 400;
            break;
          }
          delay(1);
        }
      }
    }
    else if(which_menu == SUB_MENU){
      which_menu = MENU;
      Serial.println("Return to MAIN_MENU!");
    }
  }
  else if(enc_btn == 1 && flag_btn == 1){
    flag_btn = 0;
    //Serial.println("pull");
  }
  //----------------------------------
  int enc_a = digitalRead(ENC_A);
  int enc_b = digitalRead(ENC_B);

  //Serial.print(enc_a);  Serial.print(' ');
  //Serial.println(enc_b);
  if(enc_a == 1 && enc_b == 1){
    state_enc = STATE_0;
  }
  else if(enc_a == 0 && enc_b == 1){
    if(state_enc == STATE_2){
      //Serial.println("Left");

      /*if(select_motor == MOTOR_X){
        digitalWrite(X_DIR, HIGH);
        motor_x_stop = 0;
      }
      else{
        digitalWrite(Y_DIR, HIGH);
        motor_y_stop = 0;
      }*/
      //------------------------------
      /*if(select_mode == MOTOR_MOVE){
        digitalWrite(X_DIR, HIGH);
        motor_x_stop = 0;
      }
      else if(select_mode == MOTOR_SPEED_SET){
//        step_count -= 100;
//        if(step_count < 200) step_count = 200;
//        Serial.println(step_count);
          //--------------------------------------
          TCNT1 = 0;
          ocr1a_value -= 100;
          if(ocr1a_value < 200) ocr1a_value = 200;
          OCR1A = ocr1a_value;
          Serial.println(ocr1a_value);
      }*/
      //------------------------------
      if(which_menu == MENU){
        menu_index--;
        if(menu_index < 0) menu_index = 4;
        Serial.println(menu[menu_index]);
      }
      else if(which_menu == SUB_MENU){
        if(btn_select == SUB_MOTOR_MOVE){
          digitalWrite(X_DIR, HIGH);
          motor_x_stop = 0;
        }
        else if(btn_select == SUB_MOTOR_STEP_COUNT){
          step_count_x -= 100;
          if(step_count_x < 200) step_count_x = 200;
          Serial.println(step_count_x);
        }
        else if(btn_select == SUB_MOTOR_SPEED){
          TCNT1 = 0;
          ocr1a_value -= 100;
          if(ocr1a_value < 200) ocr1a_value = 200;
          OCR1A = ocr1a_value;
          Serial.println(ocr1a_value);
        }
      }
    }
    state_enc = STATE_1;
  }
  else if(enc_a == 0 && enc_b == 0){
    if(state_enc == STATE_1){
      //Serial.println("Right");

      /*if(select_motor == MOTOR_X){
        digitalWrite(X_DIR, LOW);
        motor_x_stop = 0;
      }
      else{
        digitalWrite(Y_DIR, LOW);
        motor_y_stop = 0;
      }*/
      //------------------------------
      /*if(select_mode == MOTOR_MOVE){
        digitalWrite(X_DIR, LOW);
        motor_x_stop = 0;
      }
      else if(select_mode == MOTOR_SPEED_SET){
//        step_count += 100;
//        if(step_count > 4000) step_count = 4000;
//        Serial.println(step_count);
          //------------------------------------------
          TCNT1 = 0;
          ocr1a_value += 100;
          if(ocr1a_value > 4000) ocr1a_value = 4000;
          OCR1A = ocr1a_value;
          Serial.println(ocr1a_value);
      }*/
      //------------------------------
      if(which_menu == MENU){
        menu_index++;
        if(menu_index > 4) menu_index = 0;
        Serial.println(menu[menu_index]);
      }
      else if(which_menu == SUB_MENU){
        if(btn_select == SUB_MOTOR_MOVE){
          digitalWrite(X_DIR, LOW);
          motor_x_stop = 0;
        }
        else if(btn_select == SUB_MOTOR_STEP_COUNT){
          step_count_x += 100;
          if(step_count_x > 4000) step_count_x = 4000;
          Serial.println(step_count_x);
        }
        else if(btn_select == SUB_MOTOR_SPEED){
          TCNT1 = 0;
          ocr1a_value += 100;
          if(ocr1a_value > 4000) ocr1a_value = 4000;
          OCR1A = ocr1a_value;
          Serial.println(ocr1a_value);
        }
      }
    }
    state_enc = STATE_2;
  }
  else if(enc_a == 1 && enc_b == 0){
    state_enc = STATE_3;
  }
  //Serial.println(state_enc);
}

//SIGNAL(TIMER2_OVF_vect){
//SIGNAL(TIMER1_OVF_vect){
SIGNAL(TIMER1_COMPA_vect){
  //TCNT1 = 65536 - 400;
  
  if(motor_x_stop == 0){
    if(toggle_motor_x == 0){
      toggle_motor_x = 1;
      digitalWrite(X_STEP, HIGH);
  
      motor_count_x++;
      if(motor_count_x == step_count_x){
        motor_count_x = 0;
        motor_x_stop = 1;
      }
    }
    else{
      toggle_motor_x = 0;
      digitalWrite(X_STEP, LOW);
    }
  }
  /*else if(motor_x_stop + motor_y_stop == 2){
    digitalWrite(X_DIR, LOW);
    if(toggle_motor_x == 0){
      toggle_motor_x = 1;
      digitalWrite(X_STEP, HIGH);
  
      motor_count_x++;
      if(motor_count_x == 4000){
        motor_count_x = 0;
        motor_x_stop = 2;
      }
    }
    else{
      toggle_motor_x = 0;
      digitalWrite(X_STEP, LOW);
    }
  }*/
}

SIGNAL(TIMER3_COMPA_vect){
  //TCNT1 = 65536 - 400;
  
  if(motor_y_stop == 0){
    if(toggle_motor_y == 0){
      toggle_motor_y = 1;
      digitalWrite(Y_STEP, HIGH);
  
      motor_count_y++;
      if(motor_count_y == step_count_y){
        motor_count_y = 0;
        motor_y_stop = 1;
      }
    }
    else{
      toggle_motor_y = 0;
      digitalWrite(Y_STEP, LOW);
    }
  }
  /*else if(motor_x_stop + motor_y_stop == 2){
    digitalWrite(Y_DIR, LOW);
    if(toggle_motor_y == 0){
      toggle_motor_y = 1;
      digitalWrite(Y_STEP, HIGH);
  
      motor_count_y++;
      if(motor_count_y == 4000){
        motor_count_y = 0;
        motor_y_stop = 2;
      }
    }
    else{
      toggle_motor_y = 0;
      digitalWrite(Y_STEP, LOW);
    }
  }*/
}